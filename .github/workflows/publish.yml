name: Publish version

on:
  release:
    types:
      - created

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 15
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 15

      - name: Gradle build cache
        uses: actions/cache@v2.1.1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-build-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-build-

      - name: Gradle wrapper cache
        uses: actions/cache@v2.1.1
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      # The publishToSonatype task and the repository release need to be in the same Gradle call
      # so that the closeAndRelease task knows which staging repository was created by publishToSonatype
      - name: Build and publish to OSS Sonatype and then Maven Central
        env:
          # GPG keys for signing plugin (sign maven artifacts)
          # see https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET_ASCII_ARMORED }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSWORD }}
          # Credentials implicitly read by the gradle-nexus-publish-plugin
          # https://github.com/gradle-nexus/publish-plugin#publishing-to-maven-central-via-sonatype-ossrh
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_KEY }}
        run: ./gradlew -Pversion=${{ github.event.release.tag_name }} publishToSonatype closeAndReleaseSonatypeStagingRepository